CFLAGS=-fno-stack-protector

exploit: exploit_sql_basic.ppm exploit_sql_watermark.ppm exploit_sql_twobyte.ppm exploit_sql_blur.ppm

exploit_sql_basic.o: exploit_sql_basic.s
	as exploit_sql_basic.s -c -o exploit_sql_basic.o

exploit_sql_twobyte.o: exploit_sql_twobyte.s
	as exploit_sql_twobyte.s -c -o exploit_sql_twobyte.o

exploit_sql_basic.s: exploit_sql_basic.s.in generateAsm.py sqlQuery
	python generateAsm.py "`cat sqlQuery`" ../src/imager arch exploit_sql_basic.s.in exploit_sql_basic.s

exploit_sql_twobyte.s: exploit_sql_twobyte.s.in generateAsm.py sqlQuery
	python generateAsm.py "`cat sqlQuery`" ../src/imager arch exploit_sql_twobyte.s.in exploit_sql_twobyte.s
	
%.bin: %.o
	objcopy -O binary -j .text $< $@

%.dmp: %.o
	objdump -d --insn-width=10 $< | tail -n +8 > $@

exploit_sql_basic.ppm: exploit_sql_basic.bin
	python prepareImage.py simple exploit_sql_basic.bin exploit_sql_basic.ppm

	
# uses the basic exploit
# Dump it, because we need op size information
exploit_sql_watermark.ppm: exploit_sql_basic.s generateAsm.py sqlQuery
	as exploit_sql_basic.s -c -o exploit_sql_basic.o
	objdump -d --insn-width=10 exploit_sql_basic.o | tail -n +8 > exploit_sql_basic.dmp
	python prepareImage.py watermark exploit_sql_basic.dmp exploit_sql_watermark.ppm

# runs watermarking with the blur code
exploit_sql_twobyte.ppm: exploit_sql_twobyte.dmp generateAsm.py sqlQuery prepareImage.py
	python prepareImage.py watermark exploit_sql_twobyte.dmp exploit_sql_twobyte.ppm

exploit_sql_blur.ppm: exploit_sql_twobyte.dmp generateAsm.py sqlQuery prepareImage.py
	python prepareImage.py blur exploit_sql_twobyte.dmp exploit_sql_blur.ppm
